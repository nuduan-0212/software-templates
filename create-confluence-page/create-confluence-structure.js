const axios = require('axios');

const baseUrl = 'https://confluence.jitsinnovationlabs.com';
const username = 'anhdn@jitsinnovationlabs.com'; // ƒê√∫ng l√† email Atlassian
const apiToken = 'NaXNekVsR8M1lxdgJ7NnFK4fOxrsGoQ6AV1Yfd'; // Token 

const authHeader = 'Basic ' + Buffer.from(`${username}:${apiToken}`).toString('base64');

const axiosInstance = axios.create({
  baseURL: baseUrl,
  headers: {
    Authorization: authHeader,
    'Content-Type': 'application/json',
  },
});

async function main() {
  const spaceKey = 'BACKSTAGE';
  const spaceName = 'Backstage Integration Space';

  // 1. T·∫°o Space n·∫øu ch∆∞a c√≥
  try {
    await axiosInstance.post('/rest/api/space', {
      key: spaceKey,
      name: spaceName,
      description: {
        plain: {
          value: 'Backstage Space',
          representation: 'plain',
        },
      },
    });
    console.log(`‚úÖ Created space: ${spaceKey}`);
  } catch (err) {
    console.warn(`‚ö†Ô∏è Space may already exist or failed: ${err.response?.status} - ${err.response?.statusText}`);
  }

  // 2. T·∫°o Pages trong Space
  const pages = ['Overview', 'Architecture', 'API Docs', 'How to Deploy'];
  for (const title of pages) {
    try {
      await axiosInstance.post('/rest/api/content', {
        type: 'page',
        title,
        space: { key: spaceKey },
        body: {
          storage: {
            value: `<h1>${title}</h1><p>Generated by Backstage</p>`,
            representation: 'storage',
          },
        },
      });
      console.log(`üìù Created page: ${title}`);
    } catch (err) {
      console.error(`‚ùå Failed to create page "${title}": ${err.response?.status} - ${err.response?.statusText}`);
    }
  }
}

main().catch(console.error);
